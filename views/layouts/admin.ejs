<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    
    <!-- Stylesheets -->
    <link rel="stylesheet" href="/assets/css/admin.css">
    <link rel="stylesheet" href="/assets/css/editor.css">
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body class="admin-body">
    <!-- Admin Header -->
    <header class="admin-header">
        <div class="admin-header-content">
            <div class="admin-brand">
                <h1><%= config.site.title %> 管理后台</h1>
            </div>
            
            <div class="admin-actions">
                <a href="/" class="btn btn-outline" target="_blank">
                    <i class="fas fa-external-link-alt"></i>
                    查看网站
                </a>
                <button class="btn btn-primary" onclick="buildSite()">
                    <i class="fas fa-hammer"></i>
                    生成静态站点
                </button>
            </div>
        </div>
    </header>
    
    <!-- Admin Layout -->
    <div class="admin-layout">
        <!-- Sidebar -->
        <aside class="admin-sidebar">
            <nav class="admin-nav">
                <ul class="nav-list">
                    <li class="nav-item">
                        <a href="/admin" class="nav-link <%= title.includes('管理后台') ? 'active' : '' %>">
                            <i class="fas fa-tachometer-alt"></i>
                            <span>仪表盘</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/admin/posts" class="nav-link <%= title.includes('文章管理') ? 'active' : '' %>">
                            <i class="fas fa-file-alt"></i>
                            <span>文章管理</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/admin/posts/new" class="nav-link <%= title.includes('新建文章') ? 'active' : '' %>">
                            <i class="fas fa-plus"></i>
                            <span>新建文章</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/admin/media" class="nav-link <%= title.includes('媒体库') ? 'active' : '' %>">
                            <i class="fas fa-images"></i>
                            <span>媒体库</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/admin/settings" class="nav-link <%= title.includes('设置') ? 'active' : '' %>">
                            <i class="fas fa-cog"></i>
                            <span>站点设置</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </aside>
        
        <!-- Main Content -->
        <main class="admin-main">
            <div class="admin-content">
                <%- body %>
            </div>
        </main>
    </div>
    
    <!-- Loading Overlay -->
    <div id="loadingOverlay" class="loading-overlay" style="display: none;">
        <div class="loading-spinner">
            <i class="fas fa-spinner fa-spin"></i>
            <p>处理中...</p>
        </div>
    </div>
    
    <!-- Toast Notifications -->
    <div id="toastContainer" class="toast-container"></div>
    
    <!-- Scripts -->
    <script src="/assets/js/admin.js"></script>
    <script src="/assets/js/editor.js"></script>
    
    <!-- Admin JavaScript -->
    <script>
        // 全局管理功能
        async function buildSite() {
            showLoading('正在生成静态站点...');
            
            try {
                const response = await fetch('/api/build', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showToast('静态站点生成成功！', 'success');
                } else {
                    showToast('生成失败: ' + result.message, 'error');
                }
            } catch (error) {
                console.error('生成静态站点错误:', error);
                showToast('生成失败: ' + error.message, 'error');
            } finally {
                hideLoading();
            }
        }
        
        // 显示加载状态
        function showLoading(message = '加载中...') {
            const overlay = document.getElementById('loadingOverlay');
            const text = overlay.querySelector('p');
            text.textContent = message;
            overlay.style.display = 'flex';
        }
        
        // 隐藏加载状态
        function hideLoading() {
            const overlay = document.getElementById('loadingOverlay');
            overlay.style.display = 'none';
        }
        
        // 显示提示消息
        function showToast(message, type = 'info') {
            const container = document.getElementById('toastContainer');
            const toast = document.createElement('div');
            toast.className = `toast toast-${type}`;
            
            const icon = {
                success: 'fas fa-check-circle',
                error: 'fas fa-exclamation-circle',
                warning: 'fas fa-exclamation-triangle',
                info: 'fas fa-info-circle'
            }[type] || 'fas fa-info-circle';
            
            toast.innerHTML = `
                <i class="${icon}"></i>
                <span>${message}</span>
                <button class="toast-close" onclick="this.parentElement.remove()">
                    <i class="fas fa-times"></i>
                </button>
            `;
            
            container.appendChild(toast);
            
            // 自动移除
            setTimeout(() => {
                if (toast.parentElement) {
                    toast.remove();
                }
            }, 5000);
        }
        
        // 确认删除
        function confirmDelete(message = '确定要删除吗？') {
            return confirm(message);
        }
        
        // 检查 URL 参数中的成功消息
        document.addEventListener('DOMContentLoaded', function() {
            const urlParams = new URLSearchParams(window.location.search);
            const success = urlParams.get('success');
            
            if (success === 'created') {
                showToast('文章创建成功！', 'success');
            } else if (success === 'updated') {
                showToast('文章更新成功！', 'success');
            } else if (success === 'deleted') {
                showToast('文章删除成功！', 'success');
            }
            
            // 清理 URL 参数
            if (success) {
                const newUrl = window.location.pathname;
                window.history.replaceState({}, document.title, newUrl);
            }
        });
        
        // 移动端侧边栏切换
        function toggleSidebar() {
            const sidebar = document.querySelector('.admin-sidebar');
            sidebar.classList.toggle('active');
        }
        
        // 响应式处理
        window.addEventListener('resize', function() {
            if (window.innerWidth > 768) {
                const sidebar = document.querySelector('.admin-sidebar');
                sidebar.classList.remove('active');
            }
        });
    </script>
</body>
</html>