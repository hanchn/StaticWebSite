<!-- Post Edit Header -->
<div class="admin-header">
    <div class="header-left">
        <h1 class="admin-title">
            <i class="fas fa-edit"></i>
            <%= post ? '编辑文章' : '写新文章' %>
        </h1>
        <p class="admin-subtitle">
            <%= post ? `编辑文章: ${post.title}` : '创建一篇新的博客文章' %>
        </p>
    </div>
    <div class="header-right">
        <a href="/admin/posts" class="btn btn-outline">
            <i class="fas fa-arrow-left"></i>
            返回列表
        </a>
        <% if (post) { %>
        <a href="/posts/<%= post.slug %>" class="btn btn-outline" target="_blank">
            <i class="fas fa-eye"></i>
            预览
        </a>
        <% } %>
    </div>
</div>

<!-- Post Edit Form -->
<form id="postForm" class="post-form" data-slug="<%= post ? post.slug : '' %>">
    <div class="form-layout">
        <!-- Main Content -->
        <div class="form-main">
            <!-- Title -->
            <div class="form-group">
                <label for="title" class="form-label required">文章标题</label>
                <input type="text" id="title" name="title" class="form-input" 
                       value="<%= post ? post.title : '' %>" 
                       placeholder="输入文章标题..." required>
                <div class="form-help">标题将用于生成 URL 和 SEO</div>
            </div>
            
            <!-- Slug -->
            <div class="form-group">
                <label for="slug" class="form-label">URL 别名</label>
                <div class="input-group">
                    <span class="input-prefix">/posts/</span>
                    <input type="text" id="slug" name="slug" class="form-input" 
                           value="<%= post ? post.slug : '' %>" 
                           placeholder="自动生成...">
                    <button type="button" id="generateSlug" class="btn btn-outline btn-sm">
                        <i class="fas fa-sync"></i>
                        生成
                    </button>
                </div>
                <div class="form-help">留空将根据标题自动生成</div>
            </div>
            
            <!-- Description -->
            <div class="form-group">
                <label for="description" class="form-label">文章描述</label>
                <textarea id="description" name="description" class="form-textarea" rows="3" 
                          placeholder="简短描述文章内容，用于 SEO 和文章列表显示..."><%= post ? post.description : '' %></textarea>
                <div class="form-help">建议长度 120-160 字符，用于搜索引擎优化</div>
            </div>
            
            <!-- Content Editor -->
            <div class="form-group">
                <label for="content" class="form-label required">文章内容</label>
                <div class="editor-container">
                    <div class="editor-toolbar">
                        <div class="toolbar-group">
                            <button type="button" class="toolbar-btn" data-action="bold" title="粗体">
                                <i class="fas fa-bold"></i>
                            </button>
                            <button type="button" class="toolbar-btn" data-action="italic" title="斜体">
                                <i class="fas fa-italic"></i>
                            </button>
                            <button type="button" class="toolbar-btn" data-action="strikethrough" title="删除线">
                                <i class="fas fa-strikethrough"></i>
                            </button>
                        </div>
                        
                        <div class="toolbar-group">
                            <button type="button" class="toolbar-btn" data-action="heading" title="标题">
                                <i class="fas fa-heading"></i>
                            </button>
                            <button type="button" class="toolbar-btn" data-action="quote" title="引用">
                                <i class="fas fa-quote-left"></i>
                            </button>
                            <button type="button" class="toolbar-btn" data-action="code" title="代码">
                                <i class="fas fa-code"></i>
                            </button>
                            <button type="button" class="toolbar-btn" data-action="codeblock" title="代码块">
                                <i class="fas fa-file-code"></i>
                            </button>
                        </div>
                        
                        <div class="toolbar-group">
                            <button type="button" class="toolbar-btn" data-action="link" title="链接">
                                <i class="fas fa-link"></i>
                            </button>
                            <button type="button" class="toolbar-btn" data-action="image" title="图片">
                                <i class="fas fa-image"></i>
                            </button>
                            <button type="button" class="toolbar-btn" data-action="table" title="表格">
                                <i class="fas fa-table"></i>
                            </button>
                        </div>
                        
                        <div class="toolbar-group">
                            <button type="button" class="toolbar-btn" data-action="list" title="列表">
                                <i class="fas fa-list-ul"></i>
                            </button>
                            <button type="button" class="toolbar-btn" data-action="ordered-list" title="有序列表">
                                <i class="fas fa-list-ol"></i>
                            </button>
                            <button type="button" class="toolbar-btn" data-action="hr" title="分割线">
                                <i class="fas fa-minus"></i>
                            </button>
                        </div>
                        
                        <div class="toolbar-group">
                            <button type="button" class="toolbar-btn" data-action="preview" title="预览">
                                <i class="fas fa-eye"></i>
                            </button>
                            <button type="button" class="toolbar-btn" data-action="fullscreen" title="全屏">
                                <i class="fas fa-expand"></i>
                            </button>
                        </div>
                        
                        <div class="toolbar-group">
                            <button type="button" class="toolbar-btn" id="uploadImage" title="上传图片">
                                <i class="fas fa-upload"></i>
                            </button>
                            <input type="file" id="imageUpload" accept="image/*" multiple style="display: none;">
                        </div>
                    </div>
                    
                    <div class="editor-content">
                        <div class="editor-tabs">
                            <button type="button" class="tab-btn active" data-tab="edit">编辑</button>
                            <button type="button" class="tab-btn" data-tab="preview">预览</button>
                            <button type="button" class="tab-btn" data-tab="split">分屏</button>
                        </div>
                        
                        <div class="editor-panes">
                            <div class="editor-pane edit-pane active">
                                <textarea id="content" name="content" class="form-textarea editor-textarea" 
                                          placeholder="使用 Markdown 语法编写文章内容..." required><%= post ? post.content : '' %></textarea>
                            </div>
                            
                            <div class="editor-pane preview-pane">
                                <div id="previewContent" class="preview-content">
                                    <div class="preview-placeholder">
                                        <i class="fas fa-eye"></i>
                                        <p>在编辑区域输入内容后，这里将显示预览</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="editor-status">
                        <div class="status-left">
                            <span class="word-count">字数: <span id="wordCount">0</span></span>
                            <span class="char-count">字符: <span id="charCount">0</span></span>
                            <span class="reading-time">预计阅读: <span id="readingTime">0</span> 分钟</span>
                        </div>
                        <div class="status-right">
                            <span class="cursor-position">行 <span id="lineNumber">1</span>, 列 <span id="columnNumber">1</span></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Sidebar -->
        <div class="form-sidebar">
            <!-- Publish Settings -->
            <div class="sidebar-card">
                <div class="card-header">
                    <h3>
                        <i class="fas fa-paper-plane"></i>
                        发布设置
                    </h3>
                </div>
                <div class="card-content">
                    <div class="form-group">
                        <label for="status" class="form-label">状态</label>
                        <select id="status" name="status" class="form-select">
                            <option value="draft" <%= !post || post.status === 'draft' ? 'selected' : '' %>>草稿</option>
                            <option value="published" <%= post && post.status === 'published' ? 'selected' : '' %>>已发布</option>
                            <option value="private" <%= post && post.status === 'private' ? 'selected' : '' %>>私有</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="publishDate" class="form-label">发布时间</label>
                        <input type="datetime-local" id="publishDate" name="publish_date" class="form-input" 
                               value="<%= post && post.publish_date ? new Date(post.publish_date).toISOString().slice(0, 16) : '' %>">
                        <div class="form-help">留空使用当前时间</div>
                    </div>
                    
                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary btn-block" data-action="save">
                            <i class="fas fa-save"></i>
                            <%= post ? '更新文章' : '保存文章' %>
                        </button>
                        
                        <div class="action-buttons">
                            <button type="button" class="btn btn-outline btn-sm" id="saveDraft">
                                <i class="fas fa-file"></i>
                                保存草稿
                            </button>
                            <button type="button" class="btn btn-success btn-sm" id="publish">
                                <i class="fas fa-paper-plane"></i>
                                发布
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Category and Tags -->
            <div class="sidebar-card">
                <div class="card-header">
                    <h3>
                        <i class="fas fa-folder"></i>
                        分类和标签
                    </h3>
                </div>
                <div class="card-content">
                    <div class="form-group">
                        <label for="category" class="form-label">分类</label>
                        <div class="category-input">
                            <select id="category" name="category" class="form-select">
                                <option value="">选择分类</option>
                                <% categories.forEach(cat => { %>
                                <option value="<%= cat %>" <%= post && post.category === cat ? 'selected' : '' %>><%= cat %></option>
                                <% }) %>
                            </select>
                            <button type="button" id="addCategory" class="btn btn-outline btn-sm">
                                <i class="fas fa-plus"></i>
                            </button>
                        </div>
                        
                        <div class="new-category" id="newCategoryInput" style="display: none;">
                            <input type="text" id="newCategory" class="form-input" placeholder="新分类名称">
                            <div class="category-actions">
                                <button type="button" id="confirmCategory" class="btn btn-success btn-sm">
                                    <i class="fas fa-check"></i>
                                </button>
                                <button type="button" id="cancelCategory" class="btn btn-outline btn-sm">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="tags" class="form-label">标签</label>
                        <div class="tags-input">
                            <input type="text" id="tagsInput" class="form-input" 
                                   placeholder="输入标签，按回车添加">
                            <div class="tags-list" id="tagsList">
                                <% if (post && post.tags) { %>
                                <% post.tags.forEach(tag => { %>
                                <span class="tag-item">
                                    <%= tag %>
                                    <button type="button" class="tag-remove" data-tag="<%= tag %>">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </span>
                                <% }) %>
                                <% } %>
                            </div>
                        </div>
                        
                        <div class="popular-tags">
                            <div class="popular-tags-title">常用标签:</div>
                            <div class="popular-tags-list">
                                <% popularTags.forEach(tag => { %>
                                <button type="button" class="popular-tag" data-tag="<%= tag.name %>">
                                    <%= tag.name %> (<%= tag.count %>)
                                </button>
                                <% }) %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Featured Image -->
            <div class="sidebar-card">
                <div class="card-header">
                    <h3>
                        <i class="fas fa-image"></i>
                        特色图片
                    </h3>
                </div>
                <div class="card-content">
                    <div class="featured-image">
                        <div class="image-preview" id="imagePreview">
                            <% if (post && post.cover) { %>
                            <img src="<%= post.cover %>" alt="特色图片" id="previewImg">
                            <div class="image-overlay">
                                <button type="button" class="btn btn-sm btn-danger" id="removeImage">
                                    <i class="fas fa-trash"></i>
                                    移除
                                </button>
                            </div>
                            <% } else { %>
                            <div class="image-placeholder">
                                <i class="fas fa-image"></i>
                                <p>点击上传特色图片</p>
                            </div>
                            <% } %>
                        </div>
                        
                        <input type="hidden" id="cover" name="cover" value="<%= post ? post.cover : '' %>">
                        <input type="file" id="coverUpload" accept="image/*" style="display: none;">
                        
                        <div class="image-actions">
                            <button type="button" class="btn btn-outline btn-sm btn-block" id="selectImage">
                                <i class="fas fa-upload"></i>
                                选择图片
                            </button>
                            <button type="button" class="btn btn-outline btn-sm btn-block" id="mediaLibrary">
                                <i class="fas fa-folder"></i>
                                媒体库
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- SEO Settings -->
            <div class="sidebar-card">
                <div class="card-header">
                    <h3>
                        <i class="fas fa-search"></i>
                        SEO 设置
                    </h3>
                </div>
                <div class="card-content">
                    <div class="form-group">
                        <label for="seoTitle" class="form-label">SEO 标题</label>
                        <input type="text" id="seoTitle" name="seo_title" class="form-input" 
                               value="<%= post ? post.seo_title : '' %>" 
                               placeholder="留空使用文章标题">
                        <div class="form-help">建议长度 50-60 字符</div>
                    </div>
                    
                    <div class="form-group">
                        <label for="seoKeywords" class="form-label">关键词</label>
                        <input type="text" id="seoKeywords" name="seo_keywords" class="form-input" 
                               value="<%= post ? post.seo_keywords : '' %>" 
                               placeholder="关键词1, 关键词2, 关键词3">
                        <div class="form-help">用逗号分隔，建议 3-5 个</div>
                    </div>
                    
                    <div class="seo-preview">
                        <div class="seo-preview-title">搜索结果预览:</div>
                        <div class="seo-result">
                            <div class="seo-result-title" id="seoPreviewTitle">文章标题</div>
                            <div class="seo-result-url" id="seoPreviewUrl">https://example.com/posts/slug</div>
                            <div class="seo-result-description" id="seoPreviewDescription">文章描述...</div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Advanced Settings -->
            <div class="sidebar-card">
                <div class="card-header">
                    <h3>
                        <i class="fas fa-cog"></i>
                        高级设置
                    </h3>
                </div>
                <div class="card-content">
                    <div class="form-group">
                        <label class="checkbox-label">
                            <input type="checkbox" id="allowComments" name="allow_comments" 
                                   <%= !post || post.allow_comments !== false ? 'checked' : '' %>>
                            <span class="checkbox-custom"></span>
                            允许评论
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label class="checkbox-label">
                            <input type="checkbox" id="featured" name="featured" 
                                   <%= post && post.featured ? 'checked' : '' %>>
                            <span class="checkbox-custom"></span>
                            设为推荐文章
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label for="excerpt" class="form-label">自定义摘要</label>
                        <textarea id="excerpt" name="excerpt" class="form-textarea" rows="3" 
                                  placeholder="留空将自动生成摘要..."><%= post ? post.excerpt : '' %></textarea>
                        <div class="form-help">建议长度 100-200 字符</div>
                    </div>
                    
                    <div class="form-group">
                        <label for="customFields" class="form-label">自定义字段</label>
                        <textarea id="customFields" name="custom_fields" class="form-textarea" rows="4" 
                                  placeholder='{ "key": "value" }'><%= post && post.custom_fields ? JSON.stringify(post.custom_fields, null, 2) : '' %></textarea>
                        <div class="form-help">JSON 格式的自定义数据</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<!-- Media Library Modal -->
<div id="mediaModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>媒体库</h3>
            <button type="button" class="modal-close">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="modal-body">
            <div class="media-grid" id="mediaGrid">
                <div class="loading">加载中...</div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-outline" data-action="cancel">取消</button>
            <button type="button" class="btn btn-primary" data-action="select" disabled>选择</button>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // 初始化编辑器
    initPostEditor();
    
    function initPostEditor() {
        // 绑定事件
        bindFormEvents();
        bindEditorEvents();
        bindImageEvents();
        bindTagEvents();
        bindCategoryEvents();
        bindSEOEvents();
        
        // 初始化编辑器状态
        updateWordCount();
        updateSEOPreview();
        
        // 自动保存
        setupAutoSave();
    }
    
    function bindFormEvents() {
        const form = document.getElementById('postForm');
        const titleInput = document.getElementById('title');
        const slugInput = document.getElementById('slug');
        const generateSlugBtn = document.getElementById('generateSlug');
        
        // 表单提交
        form.addEventListener('submit', handleFormSubmit);
        
        // 标题变化时自动生成 slug
        titleInput.addEventListener('input', function() {
            if (!slugInput.value) {
                generateSlug();
            }
            updateSEOPreview();
        });
        
        // 手动生成 slug
        generateSlugBtn.addEventListener('click', generateSlug);
        
        // 快捷按钮
        document.getElementById('saveDraft')?.addEventListener('click', () => savePost('draft'));
        document.getElementById('publish')?.addEventListener('click', () => savePost('published'));
    }
    
    function bindEditorEvents() {
        const contentTextarea = document.getElementById('content');
        const toolbarBtns = document.querySelectorAll('.toolbar-btn');
        const tabBtns = document.querySelectorAll('.tab-btn');
        
        // 工具栏按钮
        toolbarBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                const action = this.dataset.action;
                handleToolbarAction(action);
            });
        });
        
        // 标签页切换
        tabBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                const tab = this.dataset.tab;
                switchEditorTab(tab);
            });
        });
        
        // 内容变化
        contentTextarea.addEventListener('input', function() {
            updateWordCount();
            updatePreview();
            updateSEOPreview();
        });
        
        // 光标位置
        contentTextarea.addEventListener('selectionchange', updateCursorPosition);
        contentTextarea.addEventListener('keyup', updateCursorPosition);
        contentTextarea.addEventListener('click', updateCursorPosition);
    }
    
    function bindImageEvents() {
        const imagePreview = document.getElementById('imagePreview');
        const coverUpload = document.getElementById('coverUpload');
        const selectImageBtn = document.getElementById('selectImage');
        const removeImageBtn = document.getElementById('removeImage');
        const mediaLibraryBtn = document.getElementById('mediaLibrary');
        const uploadImageBtn = document.getElementById('uploadImage');
        const imageUpload = document.getElementById('imageUpload');
        
        // 选择特色图片
        selectImageBtn?.addEventListener('click', () => coverUpload.click());
        imagePreview?.addEventListener('click', () => coverUpload.click());
        
        // 特色图片上传
        coverUpload?.addEventListener('change', handleCoverUpload);
        
        // 移除特色图片
        removeImageBtn?.addEventListener('click', removeCoverImage);
        
        // 媒体库
        mediaLibraryBtn?.addEventListener('click', openMediaLibrary);
        
        // 编辑器图片上传
        uploadImageBtn?.addEventListener('click', () => imageUpload.click());
        imageUpload?.addEventListener('change', handleImageUpload);
    }
    
    function bindTagEvents() {
        const tagsInput = document.getElementById('tagsInput');
        const tagsList = document.getElementById('tagsList');
        const popularTags = document.querySelectorAll('.popular-tag');
        
        // 标签输入
        tagsInput?.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                addTag(this.value.trim());
                this.value = '';
            }
        });
        
        // 移除标签
        tagsList?.addEventListener('click', function(e) {
            if (e.target.classList.contains('tag-remove') || e.target.parentElement.classList.contains('tag-remove')) {
                const tagItem = e.target.closest('.tag-item');
                if (tagItem) {
                    tagItem.remove();
                }
            }
        });
        
        // 常用标签
        popularTags.forEach(tag => {
            tag.addEventListener('click', function() {
                addTag(this.dataset.tag);
            });
        });
    }
    
    function bindCategoryEvents() {
        const addCategoryBtn = document.getElementById('addCategory');
        const newCategoryInput = document.getElementById('newCategoryInput');
        const confirmCategoryBtn = document.getElementById('confirmCategory');
        const cancelCategoryBtn = document.getElementById('cancelCategory');
        const newCategoryField = document.getElementById('newCategory');
        const categorySelect = document.getElementById('category');
        
        // 添加新分类
        addCategoryBtn?.addEventListener('click', function() {
            newCategoryInput.style.display = 'block';
            newCategoryField.focus();
        });
        
        // 确认新分类
        confirmCategoryBtn?.addEventListener('click', function() {
            const categoryName = newCategoryField.value.trim();
            if (categoryName) {
                addNewCategory(categoryName);
            }
        });
        
        // 取消新分类
        cancelCategoryBtn?.addEventListener('click', function() {
            newCategoryInput.style.display = 'none';
            newCategoryField.value = '';
        });
        
        // 回车确认
        newCategoryField?.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                confirmCategoryBtn.click();
            } else if (e.key === 'Escape') {
                cancelCategoryBtn.click();
            }
        });
    }
    
    function bindSEOEvents() {
        const seoTitle = document.getElementById('seoTitle');
        const description = document.getElementById('description');
        const slug = document.getElementById('slug');
        
        // SEO 字段变化时更新预览
        [seoTitle, description, slug].forEach(field => {
            field?.addEventListener('input', updateSEOPreview);
        });
    }
    
    function handleFormSubmit(e) {
        e.preventDefault();
        const status = document.getElementById('status').value;
        savePost(status);
    }
    
    async function savePost(status) {
        const form = document.getElementById('postForm');
        const formData = new FormData(form);
        
        // 设置状态
        formData.set('status', status);
        
        // 获取标签
        const tags = Array.from(document.querySelectorAll('.tag-item')).map(item => 
            item.textContent.trim().replace('×', '')
        );
        formData.set('tags', JSON.stringify(tags));
        
        const isEdit = !!form.dataset.slug;
        const url = isEdit ? `/admin/api/posts/${form.dataset.slug}` : '/admin/api/posts';
        const method = isEdit ? 'PUT' : 'POST';
        
        try {
            showLoading('正在保存文章...');
            
            const response = await fetch(url, {
                method: method,
                body: formData
            });
            
            const result = await response.json();
            
            hideLoading();
            
            if (result.success) {
                showToast('文章保存成功', 'success');
                
                // 如果是新文章，跳转到编辑页面
                if (!isEdit) {
                    setTimeout(() => {
                        window.location.href = `/admin/posts/edit/${result.slug}`;
                    }, 1000);
                } else {
                    // 更新页面状态
                    updatePageStatus(result.post);
                }
            } else {
                showToast('保存失败: ' + result.message, 'error');
            }
        } catch (error) {
            hideLoading();
            showToast('保存失败', 'error');
            console.error('保存文章失败:', error);
        }
    }
    
    function generateSlug() {
        const title = document.getElementById('title').value;
        const slug = title
            .toLowerCase()
            .replace(/[^\w\s-]/g, '')
            .replace(/[\s_-]+/g, '-')
            .replace(/^-+|-+$/g, '');
        
        document.getElementById('slug').value = slug;
        updateSEOPreview();
    }
    
    function handleToolbarAction(action) {
        const textarea = document.getElementById('content');
        const start = textarea.selectionStart;
        const end = textarea.selectionEnd;
        const selectedText = textarea.value.substring(start, end);
        
        let replacement = '';
        let cursorOffset = 0;
        
        switch (action) {
            case 'bold':
                replacement = `**${selectedText}**`;
                cursorOffset = selectedText ? 0 : -2;
                break;
            case 'italic':
                replacement = `*${selectedText}*`;
                cursorOffset = selectedText ? 0 : -1;
                break;
            case 'strikethrough':
                replacement = `~~${selectedText}~~`;
                cursorOffset = selectedText ? 0 : -2;
                break;
            case 'heading':
                replacement = `## ${selectedText}`;
                cursorOffset = selectedText ? 0 : 0;
                break;
            case 'quote':
                replacement = `> ${selectedText}`;
                cursorOffset = selectedText ? 0 : 0;
                break;
            case 'code':
                replacement = `\`${selectedText}\``;
                cursorOffset = selectedText ? 0 : -1;
                break;
            case 'codeblock':
                replacement = `\`\`\`\n${selectedText}\n\`\`\``;
                cursorOffset = selectedText ? 0 : -4;
                break;
            case 'link':
                replacement = `[${selectedText || '链接文本'}](url)`;
                cursorOffset = selectedText ? -4 : -9;
                break;
            case 'image':
                replacement = `![${selectedText || '图片描述'}](url)`;
                cursorOffset = selectedText ? -4 : -9;
                break;
            case 'list':
                replacement = `- ${selectedText}`;
                cursorOffset = selectedText ? 0 : 0;
                break;
            case 'ordered-list':
                replacement = `1. ${selectedText}`;
                cursorOffset = selectedText ? 0 : 0;
                break;
            case 'hr':
                replacement = '---';
                cursorOffset = 0;
                break;
            case 'table':
                replacement = '| 列1 | 列2 | 列3 |\n|-----|-----|-----|\n| 内容 | 内容 | 内容 |';
                cursorOffset = 0;
                break;
        }
        
        if (replacement) {
            insertTextAtCursor(textarea, replacement, cursorOffset);
            updateWordCount();
            updatePreview();
        }
    }
    
    function insertTextAtCursor(textarea, text, cursorOffset = 0) {
        const start = textarea.selectionStart;
        const end = textarea.selectionEnd;
        const before = textarea.value.substring(0, start);
        const after = textarea.value.substring(end);
        
        textarea.value = before + text + after;
        
        const newCursorPos = start + text.length + cursorOffset;
        textarea.setSelectionRange(newCursorPos, newCursorPos);
        textarea.focus();
    }
    
    function switchEditorTab(tab) {
        const tabBtns = document.querySelectorAll('.tab-btn');
        const editPane = document.querySelector('.edit-pane');
        const previewPane = document.querySelector('.preview-pane');
        
        // 更新按钮状态
        tabBtns.forEach(btn => {
            btn.classList.toggle('active', btn.dataset.tab === tab);
        });
        
        // 切换面板
        switch (tab) {
            case 'edit':
                editPane.classList.add('active');
                previewPane.classList.remove('active');
                break;
            case 'preview':
                editPane.classList.remove('active');
                previewPane.classList.add('active');
                updatePreview();
                break;
            case 'split':
                editPane.classList.add('active');
                previewPane.classList.add('active');
                updatePreview();
                break;
        }
    }
    
    function updateWordCount() {
        const content = document.getElementById('content').value;
        const wordCount = content.trim() ? content.trim().split(/\s+/).length : 0;
        const charCount = content.length;
        const readingTime = Math.ceil(wordCount / 200); // 假设每分钟阅读200字
        
        document.getElementById('wordCount').textContent = wordCount;
        document.getElementById('charCount').textContent = charCount;
        document.getElementById('readingTime').textContent = readingTime;
    }
    
    function updateCursorPosition() {
        const textarea = document.getElementById('content');
        const text = textarea.value.substring(0, textarea.selectionStart);
        const lines = text.split('\n');
        const lineNumber = lines.length;
        const columnNumber = lines[lines.length - 1].length + 1;
        
        document.getElementById('lineNumber').textContent = lineNumber;
        document.getElementById('columnNumber').textContent = columnNumber;
    }
    
    async function updatePreview() {
        const content = document.getElementById('content').value;
        const previewContent = document.getElementById('previewContent');
        
        if (!content.trim()) {
            previewContent.innerHTML = `
                <div class="preview-placeholder">
                    <i class="fas fa-eye"></i>
                    <p>在编辑区域输入内容后，这里将显示预览</p>
                </div>
            `;
            return;
        }
        
        try {
            const response = await fetch('/admin/api/preview', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ content })
            });
            
            const result = await response.json();
            
            if (result.success) {
                previewContent.innerHTML = result.html;
            } else {
                previewContent.innerHTML = '<div class="error">预览生成失败</div>';
            }
        } catch (error) {
            console.error('预览更新失败:', error);
            previewContent.innerHTML = '<div class="error">预览生成失败</div>';
        }
    }
    
    function updateSEOPreview() {
        const title = document.getElementById('seoTitle').value || document.getElementById('title').value || '文章标题';
        const description = document.getElementById('description').value || '文章描述...';
        const slug = document.getElementById('slug').value || 'slug';
        
        document.getElementById('seoPreviewTitle').textContent = title;
        document.getElementById('seoPreviewUrl').textContent = `https://example.com/posts/${slug}`;
        document.getElementById('seoPreviewDescription').textContent = description;
    }
    
    function addTag(tagName) {
        if (!tagName) return;
        
        const tagsList = document.getElementById('tagsList');
        const existingTags = Array.from(tagsList.querySelectorAll('.tag-item')).map(item => 
            item.textContent.trim().replace('×', '')
        );
        
        if (existingTags.includes(tagName)) return;
        
        const tagElement = document.createElement('span');
        tagElement.className = 'tag-item';
        tagElement.innerHTML = `
            ${tagName}
            <button type="button" class="tag-remove" data-tag="${tagName}">
                <i class="fas fa-times"></i>
            </button>
        `;
        
        tagsList.appendChild(tagElement);
    }
    
    function addNewCategory(categoryName) {
        const categorySelect = document.getElementById('category');
        const newCategoryInput = document.getElementById('newCategoryInput');
        const newCategoryField = document.getElementById('newCategory');
        
        // 添加到选择框
        const option = document.createElement('option');
        option.value = categoryName;
        option.textContent = categoryName;
        option.selected = true;
        categorySelect.appendChild(option);
        
        // 隐藏输入框
        newCategoryInput.style.display = 'none';
        newCategoryField.value = '';
    }
    
    async function handleCoverUpload(e) {
        const file = e.target.files[0];
        if (!file) return;
        
        const formData = new FormData();
        formData.append('image', file);
        
        try {
            showLoading('正在上传图片...');
            
            const response = await fetch('/admin/api/upload', {
                method: 'POST',
                body: formData
            });
            
            const result = await response.json();
            
            hideLoading();
            
            if (result.success) {
                setCoverImage(result.url);
                showToast('图片上传成功', 'success');
            } else {
                showToast('上传失败: ' + result.message, 'error');
            }
        } catch (error) {
            hideLoading();
            showToast('上传失败', 'error');
            console.error('图片上传失败:', error);
        }
    }
    
    function setCoverImage(url) {
        const imagePreview = document.getElementById('imagePreview');
        const coverInput = document.getElementById('cover');
        
        imagePreview.innerHTML = `
            <img src="${url}" alt="特色图片" id="previewImg">
            <div class="image-overlay">
                <button type="button" class="btn btn-sm btn-danger" id="removeImage">
                    <i class="fas fa-trash"></i>
                    移除
                </button>
            </div>
        `;
        
        coverInput.value = url;
        
        // 重新绑定移除按钮事件
        document.getElementById('removeImage').addEventListener('click', removeCoverImage);
    }
    
    function removeCoverImage() {
        const imagePreview = document.getElementById('imagePreview');
        const coverInput = document.getElementById('cover');
        
        imagePreview.innerHTML = `
            <div class="image-placeholder">
                <i class="fas fa-image"></i>
                <p>点击上传特色图片</p>
            </div>
        `;
        
        coverInput.value = '';
    }
    
    function setupAutoSave() {
        let autoSaveTimer;
        const form = document.getElementById('postForm');
        
        function triggerAutoSave() {
            clearTimeout(autoSaveTimer);
            autoSaveTimer = setTimeout(() => {
                // 只有在有内容时才自动保存
                const title = document.getElementById('title').value;
                const content = document.getElementById('content').value;
                
                if (title.trim() || content.trim()) {
                    savePost('draft');
                }
            }, 30000); // 30秒后自动保存
        }
        
        // 监听表单变化
        form.addEventListener('input', triggerAutoSave);
    }
    
    function updatePageStatus(post) {
        // 更新页面状态，如标题、URL 等
        if (post.slug && !document.getElementById('postForm').dataset.slug) {
            document.getElementById('postForm').dataset.slug = post.slug;
            history.replaceState(null, '', `/admin/posts/edit/${post.slug}`);
        }
    }
});
</script>